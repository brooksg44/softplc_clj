sequenceDiagram
    participant Developer
    participant GitHubUI as GitHub UI
    participant GitRepo as Git Repository
    participant Actions as GitHub Actions
    participant CodeQL as CodeQL Analysis
    participant CI as CI/CD Pipeline
    participant Issues as GitHub Issues
    participant PR as Pull Request

    Developer->>GitHubUI: Create new repository
    Note over Developer: On GitHub: New repository → Enter name → Create
    GitHubUI->>GitRepo: Initialize repository
    GitRepo-->>GitHubUI: Repository created
    GitHubUI-->>Developer: Repository ready
    
    Note over Developer: Can also initialize with: git init
    Note over Developer: git remote add origin https://github.com/user/repo.git

    Developer->>GitRepo: Clone repository (git clone https://github.com/user/repo.git)
    GitRepo-->>Developer: Repository cloned locally

    Note over Developer: git add .
    Note over Developer: git commit -m "Initial commit"
    Developer->>GitRepo: Push code to main branch (git push origin main)
    GitRepo-->>Actions: Code push detected
    
    par Automated Actions
        Actions->>CodeQL: Trigger security scan
        CodeQL-->>Actions: Security analysis results
        
        Actions->>CI: Trigger build pipeline
        CI->>CI: Build, lint & run tests
        CI-->>Actions: Build status & test results
        
        Actions-->>GitHubUI: Update workflow status
    end

    Developer->>GitHubUI: Create issue
    Note over Developer: On GitHub: Issues → New issue → Enter details → Submit
    GitHubUI->>Issues: Store issue
    Issues-->>GitHubUI: Issue #123 created
    GitHubUI-->>Developer: Issue created
    
    Note over Developer: Later reference issue in commit:
    Note over Developer: git commit -m "Fix issue #123"

    Developer->>GitRepo: Create feature branch (git checkout -b feature/new-feature)
    Note over Developer: Make code changes
    Note over Developer: git add .
    Note over Developer: git commit -m "Add new feature"
    Developer->>GitRepo: Push feature branch (git push -u origin feature/new-feature)
    
    Developer->>GitHubUI: Create pull request
    GitHubUI->>PR: Create PR from feature to main
    PR->>GitRepo: Fetch branch differences
    
    GitRepo-->>PR: Branch comparison results
    PR-->>GitHubUI: PR #456 created
    GitHubUI-->>Developer: PR created

    PR->>Actions: Trigger PR workflow
    
    par PR Checks
        Actions->>CodeQL: Run security scan on PR
        CodeQL-->>PR: Security analysis results
        
        Actions->>CI: Run tests on PR
        CI-->>PR: Test results & coverage
    end
    
    PR-->>GitHubUI: Update PR status
    GitHubUI-->>Developer: PR checks complete

    Developer->>GitHubUI: Request code review
    Note over Developer: On GitHub: PR → Reviewers → Add reviewers
    GitHubUI->>PR: Add reviewers
    PR-->>GitHubUI: Reviewers notified
    
    Note over Developer: Address review comments:
    Note over Developer: git add .
    Note over Developer: git commit -m "Address review feedback"
    Note over Developer: git push origin feature/new-feature
    
    Developer->>GitHubUI: Merge pull request
    GitHubUI->>PR: Validate merge requirements
    PR->>GitRepo: Merge feature into main
    
    GitRepo-->>PR: Merge complete
    PR-->>GitHubUI: PR closed
    GitHubUI-->>Developer: PR merged successfully
    
    Note over Developer: git checkout main
    Note over Developer: git pull origin main
    Note over Developer: git branch -d feature/new-feature
    
    Actions->>CI: Trigger deployment workflow
    CI->>CI: Build release artifact
    CI-->>Developer: Deployment complete